import { CircularGauge } from './circularGauge.js'
import { Icon } from './icon.js'
import { Camera } from './camera.js'
import { LineGauge } from './lineGauge.js'
import { ProgressBar } from './progressBar.js'
import { Text } from './text.js'
import { AutoChooser } from './autoChooser.js'
import { SwerveState } from './swerveState.js'
import { FieldPose } from './fieldPose.js?v=${VERSION_FRESH}'
import { Sound } from './sound.js'
import { NT4_Client } from "../interfaces/nt4.js";

//////////////////////////////////////////////////
// Logic to run on page load
//////////////////////////////////////////////////

var nt4Client = new NT4_Client(window.location.hostname, 
                    doNothing,
                    doNothing,
                    handleNewData,
                    doNothing,
                    onDisconnect
                    );

//Start NT4 connection
nt4Client.ws_connect();

// Instantiate all widgets
${WIDGETS_INSTANTIATE}

//Create a subscription for all widgets
${WIDGETS_NT4_SUBSCRIBE}

// Start up rendering (never returns)
mainRenderLoop();

//////////////////////////////////////////////////
// Render & Animation Loop Functions
//////////////////////////////////////////////////

function doNothing(){}


function handleNewData(topic, timestamp, value){
    var name = topic.name;
    ${WIDGETS_SET_VALUE}
}

function onDisconnect(){
    ${WIDGETS_SET_NO_DATA}
}

function mainRenderLoop(){

    ${WIDGETS_UPDATE}

    requestAnimationFrame(mainRenderLoop);
}

${WIDGETS_CALLBACK}




window.connectedForState = false


window.widID = {
state:0, errors:1, field:2, auton1:3, auton2:4, left:5, right:6, arm:7,
elev:8, chain:9, progress:10, camFL:11, camFR:12, camBR:13
}
window.widScale = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]



function checkForStateChange() {
var state = document.getElementById("widget0").innerText;

if (state=="1" || state=="2" || state=="3" || state=="4" || state=="5" || state=="6") {
window.connectedForState = true
}

if (window.connectedForState) {
var state = Number(state)


if (state==1) {
yavinSetWidgetAppearance(window.widID.field, 5, 35, 2, 1)

yavinSetWidgetAppearance(window.widID.state, 0, 10, 1, 0)
yavinSetWidgetAppearance(window.widID.errors, 0, 10, 1, 0)

yavinSetWidgetAppearance(window.widID.auton1, 30, 5, 1, 1)
yavinSetWidgetAppearance(window.widID.auton2, 30, 20, 1, 1)

yavinSetWidgetAppearance(window.widID.left, 7, 10, 1, 1)
yavinSetWidgetAppearance(window.widID.right, 17, 10, 1, 1)

yavinSetWidgetAppearance(window.widID.arm, 80, 5, 0.5, 1)
yavinSetWidgetAppearance(window.widID.elev, 80, 27, 0.5, 1)
yavinSetWidgetAppearance(window.widID.chain, 0, 10, 1, 0)
yavinSetWidgetAppearance(window.widID.progress, 0, 10, 1, 0)

yavinSetWidgetAppearance(window.widID.camFL, 0, 10, 1, 0)
yavinSetWidgetAppearance(window.widID.camFR, 0, 10, 1, 0)
yavinSetWidgetAppearance(window.widID.camBR, 0, 10, 1, 0)
}
if (state==2) {
yavinSetWidgetAppearance(window.widID.field, 5, 5, 1.65, 1)

yavinSetWidgetAppearance(window.widID.state, 0, 10, 1, 0)
yavinSetWidgetAppearance(window.widID.errors, 0, 10, 1, 0)

yavinSetWidgetAppearance(window.widID.auton1, 30, 5, 1, 0)
yavinSetWidgetAppearance(window.widID.auton2, 30, 20, 1, 0)

yavinSetWidgetAppearance(window.widID.left, 68, 5, 2, 0)
yavinSetWidgetAppearance(window.widID.right, 83, 5, 2, 0)

yavinSetWidgetAppearance(window.widID.arm, 68, 19, 0.5, 1)
yavinSetWidgetAppearance(window.widID.elev, 83, 19, 0.5, 1)
yavinSetWidgetAppearance(window.widID.chain, 0, 10, 1, 0)
yavinSetWidgetAppearance(window.widID.progress, 90, 90, 1.5, 0)

yavinSetWidgetAppearance(window.widID.camFL, 5, 57, 0.5, 1)
yavinSetWidgetAppearance(window.widID.camFR, 25, 57, 0.5, 1)
yavinSetWidgetAppearance(window.widID.camBR, 45, 57, 0.5, 1)
}

if (state==3) {
yavinSetWidgetAppearance(window.widID.field, 5, 5, 1.65, 1)

yavinSetWidgetAppearance(window.widID.state, 0, 10, 1, 0)
yavinSetWidgetAppearance(window.widID.errors, 0, 10, 1, 0)

yavinSetWidgetAppearance(window.widID.auton1, 30, 5, 1, 0)
yavinSetWidgetAppearance(window.widID.auton2, 30, 20, 1, 0)

yavinSetWidgetAppearance(window.widID.left, 68, 5, 2, 1)
yavinSetWidgetAppearance(window.widID.right, 83, 5, 2, 1)

yavinSetWidgetAppearance(window.widID.arm, 68, 31, 0.5, 1)
yavinSetWidgetAppearance(window.widID.elev, 83, 31, 0.5, 1)
yavinSetWidgetAppearance(window.widID.chain, 0, 10, 1, 0)
yavinSetWidgetAppearance(window.widID.progress, 90, 90, 1.5, 0)

yavinSetWidgetAppearance(window.widID.camFL, 5, 57, 0.5, 1)
yavinSetWidgetAppearance(window.widID.camFR, 25, 57, 0.5, 1)
yavinSetWidgetAppearance(window.widID.camBR, 45, 57, 0.5, 1)
}


if (state==4) {
yavinSetWidgetAppearance(window.widID.field, 5, 5, 1.5, 1)

yavinSetWidgetAppearance(window.widID.state, 0, 10, 1, 0)
yavinSetWidgetAppearance(window.widID.errors, 0, 10, 1, 0)

yavinSetWidgetAppearance(window.widID.auton1, 30, 5, 1, 0)
yavinSetWidgetAppearance(window.widID.auton2, 30, 20, 1, 0)

yavinSetWidgetAppearance(window.widID.left, 90, 0, 1, 0)
yavinSetWidgetAppearance(window.widID.right, 90, 0, 1, 0)

yavinSetWidgetAppearance(window.widID.arm, 80, 5, 0.5, 0)
yavinSetWidgetAppearance(window.widID.elev, 62, 5, 1.1, 1)
yavinSetWidgetAppearance(window.widID.chain, 0, 10, 1, 0)
yavinSetWidgetAppearance(window.widID.progress, 44, 56, 2, 1)

yavinSetWidgetAppearance(window.widID.camFL, 0, 10, 1, 0)
yavinSetWidgetAppearance(window.widID.camFR, 0, 10, 1, 0)
yavinSetWidgetAppearance(window.widID.camBR, 13, 55, 0.8, 1)
}


if (state==5) {
yavinSetWidgetAppearance(window.widID.field, 5, 10, 1, 1)

yavinSetWidgetAppearance(window.widID.state, 0, 10, 1, 0)
yavinSetWidgetAppearance(window.widID.errors, 0, 10, 1, 0)

yavinSetWidgetAppearance(window.widID.auton1, 30, 5, 1, 0)
yavinSetWidgetAppearance(window.widID.auton2, 30, 20, 1, 0)

yavinSetWidgetAppearance(window.widID.left, 86, 11, 1, 1)
yavinSetWidgetAppearance(window.widID.right, 86, 27, 1, 1)

yavinSetWidgetAppearance(window.widID.arm, 44, 10, 0.75, 1)
yavinSetWidgetAppearance(window.widID.elev, 65, 10, 0.75, 1)
yavinSetWidgetAppearance(window.widID.chain, 0, 10, 1, 0)
yavinSetWidgetAppearance(window.widID.progress, 44, 46, 2.3, 1)

yavinSetWidgetAppearance(window.widID.camFL, 5, 57, 0.5, 0)
yavinSetWidgetAppearance(window.widID.camFR, 25, 57, 0.5, 0)
yavinSetWidgetAppearance(window.widID.camBR, 45, 57, 0.5, 0)
}


if (state==6) {
yavinSetWidgetAppearance(window.widID.field, 7, 5, 1.65, 1)

yavinSetWidgetAppearance(window.widID.state, 0, 10, 1, 0)
yavinSetWidgetAppearance(window.widID.errors, 0, 10, 1, 0)

yavinSetWidgetAppearance(window.widID.auton1, 30, 5, 1, 0)
yavinSetWidgetAppearance(window.widID.auton2, 30, 20, 1, 0)

yavinSetWidgetAppearance(window.widID.left, 85, 12, 1.4, 1)
yavinSetWidgetAppearance(window.widID.right, 85, 32, 1.4, 1)

yavinSetWidgetAppearance(window.widID.arm, 68, 5, 0.55, 1)
yavinSetWidgetAppearance(window.widID.elev, 68, 30, 0.55, 1)
yavinSetWidgetAppearance(window.widID.chain, 0, 10, 1, 0)
yavinSetWidgetAppearance(window.widID.progress, 45, 57, 2.4, 1)

yavinSetWidgetAppearance(window.widID.camFL, 5, 57, 0.5, 1)
yavinSetWidgetAppearance(window.widID.camFR, 25, 57, 0.5, 1)
yavinSetWidgetAppearance(window.widID.camBR, 45, 57, 0.5, 0)
}

}
}


function yavinSetWidgetAppearance(id, posX, posY, scale, opacity) {
var widgetScale = window.widScale[id]
var widgetID = "widget"+id
var widget = document.getElementById(widgetID)
widget.style.top=posY+"%";
widget.style.left=posX+"%";
var height = Number(widget.style.height.replace("vw",""))
var width = Number(widget.style.width.replace("vw",""))
widget.style.height=(height/widgetScale*scale)+"vw";
widget.style.width=(width/widgetScale*scale)+"vw";
widget.style.opacity=opacity;
if (opacity<0.01) {
if (widget.innerHTML.includes("camera")) {
widget.style.display = "none"
}
}
else {
if (widget.style.display=="none") {
widget.style.display="block";
}
}
//eval("setTimeout(function() {document.getElementById('"+widgetID+"').style.display='none'},1000)");



window.widScale[id] = scale;
}


var quickOutputOfThis = setInterval(checkForStateChange,10)
console.log("interval id: "+quickOutputOfThis)


